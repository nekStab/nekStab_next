      ! LINEAR STABILITY FRAMEWORK
      ! Shared memory bounded arrays and parameters
      
      ! Character variables
      character(len=1) :: evop
      common /nStab_char/ evop
      
      ! Logical variables for various stability flags
      logical :: ifbfcv, ifres, ifldbf, ifbf2D, ifseed_nois, ifseed_symm, ifseed_load
      logical :: ifvor, ifvox, ifstorebase, ifdyntol, iffindiff
      logical :: isNekStabinit
      logical :: isDirect, isAdjoint, isTransientGrowth, isResolvent
      logical :: isFloquetDirect, isFloquetAdjoint, isFloquetTransientGrowth, isFloquetResolvent
      logical :: isNewtonFP, isNewtonPO, isNewtonPO_T
      
      common /nStab_logical/ ifbfcv, ifres, ifldbf, ifbf2D, ifseed_nois, ifseed_symm, ifseed_load
      common /nStab_logical/ ifvor, ifvox, ifstorebase, ifdyntol, iffindiff
      common /nStab_logical/ isNekStabinit, isDirect, isAdjoint, isTransientGrowth
      common /nStab_logical/ isFloquetDirect, isFloquetAdjoint, isFloquetTransientGrowth
      common /nStab_logical/ isNewtonFP, isNewtonPO, isNewtonPO_T
      common /nStab_logical/ isResolvent, isFloquetResolvent
      
      ! Real variables for numerical tolerances and domain dimensions
      real :: eigen_tol, schur_del, glmax_qc, dtmaxx
      real :: xmn, xmx, ymn, ymx, zmn, zmx, epsilon_base
      common /nStab_real/ eigen_tol, schur_del, glmax_qc, dtmaxx, xmn, xmx, ymn, ymx, zmn, zmx, epsilon_base
      
      ! Integer variables for boost convergence and spatial dimensions
      integer :: bst_skp, bst_snp, k_dim
      common /nStab_boostconv/ bst_skp, bst_snp, k_dim
      
      integer :: mstep, schur_tgt, maxmodes, schur_cnt, glob_skip, nof
      common /nStab_int/ mstep, schur_tgt, maxmodes, schur_cnt, glob_skip, nof
      
      ! Real variables for finite difference method
      real :: xck, yck, zck
      integer :: findiff_order
      real :: coefs(4), ampls(4)
      common /nStab_fd/ xck, yck, zck, coefs, ampls, findiff_order
      
      ! Arrays for base flow variables
      real :: ubase(lx1,ly1,lz1,lelv), vbase(lx1,ly1,lz1,lelv)
      real :: wbase(lx1,ly1,lz1,lelv), pbase(lx2,ly2,lz2,lelv)
      real :: tbase(lx1,ly1,lz1,lelt,ldimt)
      common /nStab_bflows/ ubase, vbase, wbase, pbase, tbase
      
      ! Arrays for boundary condition variables
      real :: ubb(lx1,ly1,lz1,lelv), vbb(lx1,ly1,lz1,lelv)
      real :: vjb(lx1,ly1,lz1,lelv)
      common /nStab_bcs/ ubb, vbb, vjb
      
      ! Arrays for general forcing variables
      real :: fcx(lx1,ly1,lz1,lelv), fcy(lx1,ly1,lz1,lelv)
      real :: fcz(lx1,ly1,lz1,lelv), fcp(lx2,ly2,lz2,lelv)
      real :: fct(lx1,ly1,lz1,lelt,ldimt)
      common /nStab_forces/ fcx, fcy, fcz, fcp, fct
      
      ! Arrays for complex forcing variables
      complex :: fRu(lx1,ly1,lz1,lelv), fRv(lx1,ly1,lz1,lelv)
      complex :: fRw(lx1,ly1,lz1,lelv), fRp(lx2,ly2,lz2,lelv)
      complex :: fRt(lx1,ly1,lz1,lelt,ldimt)
      real :: omega_t
      common /nStab_forces/ fRu, fRv, fRw, fRp, fRt, omega_t
      
      ! Arrays and variables for sponge function and related parameters
      real :: spng_fn(lx1*ly1*lz1*lelv), spng_vr(lx1*ly1*lz1*lelv,ldim)
      real :: spng_vt(lx1*ly1*lz1*lelt,ldimt)
      real :: spng_st, spng_wl(ldim), spng_wr(ldim)
      real :: spng_dl(ldim), spng_dr(ldim), bm1s(lx1,ly1,lz1,lelv)
      real :: xLspg, xRspg, yLspg, yRspg, zLspg, zRspg, acc_spg
      common /nStab_sponge/ spng_fn, spng_vr, spng_vt, spng_st, spng_wl, spng_wr
      common /nStab_sponge/ spng_dl, spng_dr, bm1s, xLspg, xRspg, yLspg, yRspg, zLspg, zRspg, acc_spg