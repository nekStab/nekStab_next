      ! LINEAR STABILITY FRAMEWORK
      ! Shared memory bounded arrays and parameters

      character(len=1) :: evop
      common /nStab_char/ evop

      logical                ifbfcv,ifres,ifldbf,ifbf2D,ifseed_nois,ifseed_symm,
     $                       ifseed_load,ifvor,ifvox,ifstorebase,ifdyntol,iffindiff
      common /nStab_logical/ ifbfcv,ifres,ifldbf,ifbf2D,ifseed_nois,ifseed_symm,
     $                       ifseed_load,ifvor,ifvox,ifstorebase,ifdyntol, iffindiff

      logical :: isDirect, isAdjoint, isDirectAdjoint
      logical :: isFloquetDirect, isFloquetAdjoint, isFloquetDirectAdjoint
      logical :: isNewtonFP, isNewtonPO, isNewtonPO_T
      logical :: isResolvent, isFloquetResolvent

      common /nStab_logical/ isDirect, isAdjoint, isDirectAdjoint
      common /nStab_logical/ isFloquetDirect, isFloquetAdjoint, isFloquetDirectAdjoint
      common /nStab_logical/ isNewtonFP, isNewtonPO, isNewtonPO_T
      common /nStab_logical/ isResolvent, isFloquetResolvent

      real                eigen_tol,schur_del,glmax_qc,dtmaxx,xmn,xmx,ymn,ymx,zmn,zmx
      common /nStab_real/ eigen_tol,schur_del,glmax_qc,dtmaxx,xmn,xmx,ymn,ymx,zmn,zmx

      integer                  bst_skp, bst_snp, k_dim
      common /nStab_boostconv/ bst_skp, bst_snp, k_dim

      integer            mstep,schur_tgt,maxmodes,schur_cnt,glob_skip,nof
      common /nStab_int/ mstep,schur_tgt,maxmodes,schur_cnt,glob_skip,nof

      real xck,yck,zck
      common /nStab_zeroc/ xck,yck,zck

      integer findiff_order
      real :: coefs(4), ampls(4), epsilon
      common /nStab_fd/ findiff_order, coefs, ampls, epsilon

      real ubase(lx1,ly1,lz1,lelv)
     $    ,vbase(lx1,ly1,lz1,lelv)
     $    ,wbase(lx1,ly1,lz1,lelv)
     $    ,pbase(lx2,ly2,lz2,lelv)
     $    ,tbase(lx1,ly1,lz1,lelt,ldimt)
      common /nStab_bflows/ ubase,vbase,wbase,pbase,tbase
      
      real ubb(lx1,ly1,lz1,lelv)
     $    ,vbb(lx1,ly1,lz1,lelv)
     $    ,vjb(lx1,ly1,lz1,lelv)
      common /nStab_bcs/ ubb,vbb,vjb

      real fcx(lx1,ly1,lz1,lelv)
     $    ,fcy(lx1,ly1,lz1,lelv)
     $    ,fcz(lx1,ly1,lz1,lelv)
     $    ,fcp(lx2,ly2,lz2,lelv)
     $    ,fct(lx1,ly1,lz1,lelt,ldimt)
      common /nStab_forces/ fcx, fcy, fcz, fcp, fct !general forcing array

      real fcox(lx1,ly1,lz1,lelv)
     $    ,fcoy(lx1,ly1,lz1,lelv)
     $    ,fcoz(lx1,ly1,lz1,lelv)
     $    ,fcop(lx2,ly2,lz2,lelv)
     $    ,fcot(lx1,ly1,lz1,lelt,ldimt)
      common /nStab_forces/ fcox, fcoy, fcoz, fcop, fcot !resolvent basis forcing array

      real spng_fn(lx1*ly1*lz1*lelv)       ! sponge function
     $    ,spng_vr(lx1*ly1*lz1*lelv,ldim)  ! reference velocity field
     $    ,spng_vt(lx1*ly1*lz1*lelt,ldimt) ! reference scalar fields
      real spng_st       !var sponge strength
      real spng_wl(ldim) !var sponge width (left section; every dmension separately)
      real spng_wr(ldim) !var sponge width (right section)
      real spng_dl(ldim) !var sponge drop/rise width (left section)
      real spng_dr(ldim) !var sponge drop/rise width (right section)
      real bm1s(lx1,ly1,lz1,lelv) !weight matrix without sponge 
      real xLspg, xRspg, yLspg, yRspg, zLspg, zRspg, acc_spg

      common /nStab_sponge/  spng_fn, spng_vr, spng_vt, spng_st, spng_wl, spng_wr, spng_dl, spng_dr, bm1s, 
     $                       xLspg, xRspg, yLspg, yRspg, zLspg, zRspg, acc_spg